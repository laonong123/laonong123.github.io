{"meta":{"title":"Hexo","subtitle":null,"description":null,"author":"John Doe","url":"http://yoursite.com","root":"/"},"pages":[],"posts":[{"title":"Oracle学习笔记一","slug":"我的第一篇文章","date":"2019-10-22T13:53:57.000Z","updated":"2019-10-31T11:32:39.196Z","comments":true,"path":"2019/10/22/我的第一篇文章/","link":"","permalink":"http://yoursite.com/2019/10/22/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/","excerpt":"","text":"第一章 字符串类型及函数字符串类型分3种，char(n)、varchar(n)、varchar2(n).char(n) 固定长度字符串，假如长度不足n,右边空格补齐；varchar(n) 可变长度字符串，假如长度不足n，右边不会补齐；varchar2(n) 可变长度字符串，Oracle官方推荐使用，向后兼容性好。 char(n) VS varchar2(n), vhar(n)查询效率较高，varchar2(n) 存储空间相对较小。 lpad() 向左补齐字符串： select lpad(stuno,6,’0’) from t_user;rpad() 向右补齐字符串： select rpad(stuno,6,’0’) from t_user;lower() 返回字符串小写：select lower(userName) from t_user;upper() 返回字符串小写：select upper(userName) from t_user; 第二章 数值类型及函数number 是 oracle 中的数据类型；number(precision,scale)； Precision，scale 均可选；Precision 代表精度，sacle 代表小数位的位数；Precision 范围[1,38] scale 范围[-84,127] 举例：12345.678 Precision 是 8 scale 是 3；number(6,3)类型和number(6,-3)类型插入数据的结果如下： //abs()函数应用例子：select abs(n1) from t_number where id=1;//round()函数四舍五入select round(n1,2) from t_number where id=1;//解释：round(n1,2)中的第二个参数2为小数的位数如果只有一个参数像round(n1)默认就没有小数了//向上取整ceil()select ceil(12.4) from dual;//输出13select ceil(-12,3)from dual;//输出-12//向下取整floor()select ceil(12.4) from dual;//输出12//取模函数mod(5,3)select mod(5,3) from dual;//输出2//正负函数sign()select sign(0)from dual;//输出0select sign(-12)from dual;//输出-1select sign(212)from dual;//输出1 第三章 日期类型及函数Date 和 timestamp(时间戳)Date包含信息centry(世纪信息) year 、month、day、hour、minute、secondtimestamp 一般用于日期要求非常精确的情况，精确到毫秒级insert into t_date values(1,sysdate,systimetamp);select sysdate from dual;select systimestamp from dual; Months_between 返回两个日期的相差月数:select months_between(d1,d2) from t_date where id=1;next_day 返回特定日期之后的一周内的日期：select next_day(d1,2) from t_date where id=1; 第四章 其他常用函数Max 求最大值：select max(sal) from emp;min 求最小值：select min(sal) from emp;avg 求平均值：select avg(sal) from emp;sum 求和：select sum(sal) from emp;count 统计记录值：select count(sal) from emp; Nvl 空值处理：select ename,nvl(sal,0) from emp;Oracle分页：select * from (select a*,rownum rn from(select * from emp)A where rownum&lt;=10) where rn&gt;5; 条件判断式between and 范围查询：select * from emp where sal between 900 and 1100;select * from emp where sal&gt;=900 and sal&lt;=1100; in 集合范围:select ename,hiredate from emp where ename in (select distinct ename from bonus); like 模糊查询：select * from emp where ename like ‘%M%’;select * from emp where ename like ‘M%’;select * from emp where ename like ‘_M%’; 参考文献www.baidu.com","categories":[],"tags":[]},{"title":"Oracle学习笔记二","slug":"我的第二篇文章","date":"2019-10-22T13:53:57.000Z","updated":"2019-10-31T11:32:34.597Z","comments":true,"path":"2019/10/22/我的第二篇文章/","link":"","permalink":"http://yoursite.com/2019/10/22/%E6%88%91%E7%9A%84%E7%AC%AC%E4%BA%8C%E7%AF%87%E6%96%87%E7%AB%A0/","excerpt":"","text":"第五章 流程控制语句1， 无条件循环 loop2， 2，while 循环3， 3，for 循环 例：—删除同一本书多余的记录，只留一个记录set serverout on;declarebookcount number;maxId number;begin loop select count(bookname) into bookcount from t_book where bookname=’微生物学’; dbms_output.put_line(‘该书共有：’||bookcount||’本’); if bookcount&gt;1 then select max(id) into maxId from t_book where bookname=’微生物学’; dbms_output.put_line(‘该书对应最大ID：’||maxId); delete from t_book where id=maxId; commit; else exit; end if; end loop;end; 第六章 游标使用游标，我们可以对查询的结果、对行、列数据进行更加细致的处理，以及对其他DML操作进行判断等操作。 显示游标——列游标set serverout on;declare cursor cu_emp is select empno,ename,sal from emp;e_no emp.empno%type;e_name emp.ename%type;e_sal emp.sal%type;begin open cu_emp; fetch cu_emp into e_no,e_name,e_sal; while cu_emp%found loop dbms_output.put_line(‘编号：’||e_no||’，姓名：’||e_name||’,薪水：’||e_sal); fetch cu_emp into e_no,e_name,e_sal; end loop; close cu_emp;end; ——行游标set serverout on;declare cursor cu_emp is select * from emp;e emp%rowtype;begin open cu_emp; fetch cu_emp into e; while cu_emp%found loop dbms_output.put_line(‘编号：’||e.empno||’，姓名：’||e.ename||’,薪水：’||e.sal); fetch cu_emp into e; end loop; close cu_emp;end; 隐式游标–隐式游标 begin if sql%isopen then dbms_output.put_line(‘隐式游标已打开’); else dbms_output.put_line(‘隐式游标未打开’); end if;end; declare e_count number;begin select count(*) into e_count from emp; dbms_output.put_line(‘游标捕获的记录数：’||sql%rowcount);end; 第七章 触发器语句触发器针对整个表，作用于整个表操作语法结构Create trigger 触发器名Before/after 触发动作On 作用对象示例：create or replace trigger tr_book2before insert or deleteon t_bookbegin if user!=’SCOTT’ then raise_application_error(-20001,’权限不足’); end if;end; create or replace trigger tr_book_logafter insert or update or deleteon t_bookbegin if inserting then insert into t_book_log values(user,’insert’,sysdate); else if updating then insert into t_book_log values(user,’update’,sysdate); else if deleting then insert into t_book_log values(user,’delete’,sysdate); end if; end if; end if;end; 行触发器针对行记录语法结构Create trigger 触发器名Before/after 触发动作For each rowOn 作用对象示例：create or replace trigger tr_book_addafter inserton t_bookfor each rowbegin update t_booktype set num=num+1 where id=:new.typeid;end; 第八章 Oracle函数语法结构Create function 函数名称 return 返回值类型 asBegin…End 函数名称； 例子：create function getBookCount return number asbegin declare book_count number; begin select count(*) into book_count from t_book; return book_count; end;end getBookCount; 调用：set serveroutput on;begin dbms_output.put_line(‘表t_book有’||getBookCount()||’条数据’);end； 第九章 Oracle存储过程语法结构Create procedure 存储过程名称 asBegin…End In 只进不出Out 只出不进In out 可进可出 例：create procedure addBook(bookName in varchar2, typeId in number) asbegin declare maxId number; begin select max(id) into maxId from t_book; insert into t_book valuse(maxId+1,bookName,typeId); end;end addBook; 调用：execute addBook(‘mysql入门到跑路’,1); 第十章 Oracle权限Oracle 权限分为系统权限和对象权限系统权限是Oracle内置的，与具体对象无关的权限，比如创建表的权限、连接数据库的权限；对象权限是对具体对象的权限，比如表、视图、触发器等的操作权限。 系统权限视图：system_privilege_map权限分配视图：dba_sys_privs回收系统权限：revoke 权限 from 用户; 对象权限分配用户表权限视图： dba_tab_privs给对象授权 grant 权限 on 对象 from 用户; 回收权限revoke 对象权限 on 对象 from 用户; 参考文献www.baidu.com","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2019-10-22T13:34:24.590Z","updated":"2019-10-22T13:34:24.590Z","comments":true,"path":"2019/10/22/hello-world/","link":"","permalink":"http://yoursite.com/2019/10/22/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}